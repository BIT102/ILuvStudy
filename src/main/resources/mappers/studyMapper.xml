<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- board_study mapper -->
<mapper namespace="dev.mvc.mapper.StudyMapper">

<!-- 카테고리 수정부분 -->
<delete id="caDelete">
delete 
from
board_category
where
bsbno = #{bsBno}
</delete>

<!-- 파일삭제 -->
<delete id="atDelete">
delete
from
board_attach
where
bsbno = #{bsBno}
</delete>

<!-- 스터디 수정 -->
<update id="update">
update 
board_study 
set
title = #{title}
, max = #{max}
, rdid = #{rDId}
, rsid = #{rSId} <!-- null허용 -->
, age = #{age}
, sc = #{sc}
, sd = #{sd}
, st = #{st}
, et = #{et}
, content = #{content} <!-- null허용 -->
where bno = #{bno}
</update>

<!-- 대분류 -->
<select id="getcaD" resultType="String">
select 
distinct
sc.CDNAME
from 
board_category bc
left outer join study_category sc on bc.categoryd = sc.cdid
where bc.BSBNO = #{bno}
</select>

<!-- 소분류 -->
<select id="getcaS" resultType="String">
select
sc.CSNAME
from 
board_category bc
left outer join study_category sc on bc.CATEGORYD = sc.CDID and bc.CATEGORYS = sc.CSID
where bc.bsbno = #{bno}
</select>

<!-- 스터디 등록 사람숫자 -->
<update id="updateNow">
UPDATE 
board_study
SET now = now + #{amount}
WHERE bno = #{bno}
</update>

<!-- 스터디 등록 -->
 <insert id="createStudy">
insert into board_study (
title
, writer
, max
, rDId
, rSId
, age
, sc
, sd
, st
, et
, content
) values (
#{title}
, #{writer}
, #{max}
, #{rDId}
, #{rSId} <!-- null허용 -->
, #{age}
, #{sc}
, #{sd}
, #{st}
, #{et}
, #{content} <!-- null허용 -->
)
</insert>

<!-- 카테고리 김상욱수정 -->
<select id="studyCategory" resultType="StudyVO">
		select *
		from study_category
		group by cdid
</select>
	
<select id="studyCategory2" resultType="StudyVO">
	select *
	from study_category
	where cdid=#{cDId}
	order by cdid, csid
</select>

<!-- 지역정보 -->
<select id="region" resultType="StudyVO">
	select *
	from region
	order by rdid, rsid
	
</select>
<select id="region2" resultType="StudyVO">
	select *
	from region
	where rdid=#{rDId}
	order by rdid, rsid
</select>



<insert id="createCa">
INSERT INTO
board_category (
bsbno
, categoryd
, categorys
) VALUES (
#{bno}
, #{categoryD}
, #{categoryS}
)
</insert>

<select id="readCa" resultType="StudyVO">
select
bc.categoryd
, sc.cdname
, bc.categorys
, sc.csname
from
board_category bc
left outer join study_category sc on bc.CATEGORYD = sc.CDID and bc.CATEGORYS = sc.CSID
where bsbno = #{bno}
</select>

<!-- 스터디 읽어오기 -->
<select id="readStudy" resultType="StudyVO">
SELECT
ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.RDID
, bs.RSID
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, group_concat(sc.csname) csname 
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category sc
WHERE bs.bno > 0
and bs.bno = #{bno}
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
group by bs.bno
</select>

<!-- 전체불러오기 -->
<select id="studyList" resultType="StudyVO">
<![CDATA[
SELECT
ba.name
, bs.bno
, bs.title
, bs.writer
, u.nickname
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
WHERE bs.bno > 0
ORDER BY bs.bno desc, bs.regdate desc;
]]>
</select>

<!-- 보드삭제합니다 -->
<delete id="delete">
DELETE 
FROM
board_study
WHERE
bno = #{bno}

</delete>
<!-- 파일 등록 -->
<insert id="addFile" parameterType="map">
INSERT
INTO
board_attach(
name
, bsBno
, status
)
VALUES(
#{name}
, #{bno}
, #{status}
)
</insert>

<!-- 파일불러오기 -->
<select id="getFile" resultType="string">
SELECT 
name
, status
FROM
board_attach
WHERE
bsbno = #{bsBno}
AND status = 'X'
ORDER BY regdate
</select>

<!-- 업데이트를 위한 파일 불러오기 -->
<select id="getFileup" resultType="string">
select
name
from
board_attach
where
bsbno = #{bsBno}
order by regdate
</select>

<delete id="deleteFile">
delete from
board_attach
where bsbno = #{bsBno}
and name = #{fileName}
</delete>


<!-- 게시물 조회수 -->
<update id="upVct">

UPDATE
board_study
SET
vct = vct + 1 
WHERE
bno = #{bno}
</update>

<!-- 페이지 처리 -->
<select id="listPage" resultType="StudyVO">
<![CDATA[
SELECT
ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, sc.csname
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category scs
WHERE bs.bno > 0
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
ORDER BY bs.bno desc
, bs.regdate desc
limit #{page}, 9
]]>
</select>

<!-- 페이지데이터 -->
<select id="listCriteria" resultType="StudyVO">
<![CDATA[
SELECT
ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, sc.csname
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category sc
WHERE bs.bno > 0
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
ORDER BY bs.bno desc
, bs.regdate desc
limit #{pageStart}
, #{perPageNum}
]]>
</select>

<!-- 페이징 개수 -->
<select id="countPaging" resultType="int">
<![CDATA[
SELECT
COUNT(bs.bno)
, ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, sc.csname
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category sc
WHERE bs.bno > 0
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
]]>
</select>

<select id="listSearch" resultType="studyVO">
<![CDATA[
SELECT
ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, group_concat(sc.csname) csname 
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category sc
WHERE bs.bno > 0
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS

]]>
<include refid="search"></include>

<![CDATA[
group by bs.bno
ORDER BY bno desc
limit #{pageStart}
, #{perPageNum}
]]>
</select>

<select id="listSearchCount" resultType="int">
<![CDATA[
SELECT
count(bs.bno)
,ba.name
, bs.bno
, bs.title
, bs.writer
, u.NICKNAME
, bs.now
, bs.max
, r.rDName
, r.rSName
, bs.age
, bs.sc
, bs.sd
, bs.st
, bs.et
, bs.content
, bs.vct
, bs.rct
, bs.regdate
, bs.enddate
, sc.cdname
, sc.csname
FROM 
board_study bs
left outer join user u on bs.writer = u.EMAIL
left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
left outer join board_category bc on bs.bno = bc.bsbno
, study_category sc
WHERE bs.bno > 0
and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
]]>
<include refid="search"></include>
</select>




<!-- 검색에 필요한 화면구성 -->
<sql id="search">
 		<if test="searchType != null">
 			<if test="searchType == 'x'.toString()">
 				and (title like CONCAT('%', #{keyword}, '%') 
 					 or nickname like CONCAT('%', #{keyword}, '%') 
 					 or content like CONCAT('%', #{keyword}, '%') 
 					 or r.rdname like CONCAT('%', #{keyword}, '%') 
 					 or r.rsname like CONCAT('%', #{keyword}, '%')
 				     or sc.cdname like CONCAT('%', #{keyword}, '%') 
 				     or csname like CONCAT('%', #{keyword}, '%'))
 			</if>
  			<if test="searchType == 't'.toString()">
  				and title like CONCAT('%', #{keyword}, '%')
  			</if>
  			<if test="searchType == 'n'.toString()">
  				and nickname like CONCAT('%', #{keyword}, '%')
  			</if>
  			<if test="searchType == 'c'.toString()">
  				and content like CONCAT('%', #{keyword}, '%')
  			</if>
			<if test="searchType == 'r'.toString()">
			    and (r.rdname like CONCAT('%', #{keyword}, '%') or r.rsname like CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'g'.toString()">
				and (sc.cdname like CONCAT('%', #{keyword}, '%') or csname like CONCAT('%', #{keyword}, '%'))
			</if>
  		</if> 
  </sql>
	

  	 		  <select id="getNextBno" resultType="int">

  select LAST_INSERT_ID();

  </select>
  
  <!-- 카테고리 분류 SQL -->
 <select id="catList" resultType="studyVO">
<![CDATA[
select DISTINCT cDName
 from study_category
]]>
</select>

   <select id="catList2" resultType="studyVO">
<![CDATA[
select cSName, csId
 from study_category
 where cdId=#{csId} 
]]>
</select>

<!-- region 분류 -->
 <select id="rgList" resultType="studyVO">
<![CDATA[
SELECT distinct rDName
 from region
]]>
</select>

<select id="rgList2" resultType="studyVO">
<![CDATA[
select rSName, rSId
 from region
where rDId=#{rSId} 
]]>
</select>


</mapper>
