<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 
  
  <mapper namespace = "dev.mvc.mapper.userMapper">
  
  	<!-- 회원 가입 -->
  	<insert id="joinUser">
  	insert into user(email, name, password, nickName, birth, gender, phoneNum) 
	values(#{email}, #{name}, #{password}, #{nickName}, #{birth}, #{gender}, #{phoneNum}); 
  	</insert>
  	
<!-- 
  	<select id = "loginUser" resultType="UserVO">
  		select * from user where email = #{email} and password = #{password}
  	</select> -->
  	
  	<!-- 로그인 -->
  	<select id = "userDTOLogin" resultType="UserVO">
  		select * from user where email = #{email} and password = #{password}
  	</select>
  	
  	<!-- 프로필 읽어오기 #(email)-->
  	<select id="read" resultType="UserVO">
  	select photo, email,password, name, nickname, birth, gender, phoneNum, introduction, homepage
  	from user 
  	where email=#{email};
  	</select>
  	
  	<!-- 프로필 수정 -->
  	<update id="update">
  	update user set name=#{name}, nickname=#{nickName}, gender=#{gender}, phoneNum=#{phoneNum}, 
  	birth=#{birth} where email=#{email};
  	</update>
  	
  	<!-- 부가정보 수정 -->
  	<update id="updateAddInfo">
  	update user set homepage=#{homepage}, introduction=#{introduction} where email=#{email}; 
  	</update>
  	
  	<!-- 비밀번호 변경 -->
  	<update id="changePw">
  	update user set password=#{password} where email=#{email};
  	</update>
  	 
  	<!-- 회원 탈퇴 -->
  	<update id="quit">
  	update user set isDel=1 where email=#{email};
  	</update>
  
  	<!-- 비밀번호 체크 -->
  	<select id="checkPw" resultType="int">
  	select count(*) from user where email=#{email} and password=#{password};
  	</select>
  	
  	<!-- 닉네임 체크 -->
  	<select id="nickCheck" resultType="int">
  	select count(*) from user where nickname = #{nickName};
  	</select>
  	
  	<!-- 프로필 사진 수정 -->
  	<update id="insertImg">
  	update user set photo=#{photo} where email=#{email};
  	</update>
  	
  	<!-- 북마크 불러오기 -->
<!--   	<select id="bookmarkList" resultType="studyVO">
  	SELECT
		ba.name
		, bs.bno
		, bs.title
		, bs.writer
		, u.NICKNAME
		, sc.cDName
		, sc.cSName
		, bs.now
		, bs.max
		, r.rDName
		, r.rSName
		, bs.age
		, bs.sc
		, bs.sd
		, bs.st
		, bs.et
		, bs.content
		, bs.vct
		, bs.rct
		, bs.regdate
		, bs.enddate
		FROM 
		board_study bs
		left outer join user u on bs.writer = u.EMAIL
		left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
		left outer join study_category sc on bs.CATEGORYD = sc.CDID and bs.CATEGORYS = sc.CSID
		left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
		WHERE 
		bs.bno > 0 and bs.bno in (select bookmark.bsbno
		from bookmark
		where useremail = #{email});
  	</select> -->
  	
  	<!-- 북마크 즐겨찾기 수 -->
	<select id="bookmarkCount" resultType="int">
  		select count(*) from bookmark where bsbno = #{bno};
  	</select>
  	
  	<!-- 모집 스터디 불러오기 -->
  	<select id="recruitList" resultType="studyVO">
	SELECT
	ba.name
	, bs.bno
	, bs.title
	, bs.writer
	, u.NICKNAME
	, bs.now
	, bs.max
	, r.rDName
	, r.rSName
	, bs.age
	, bs.sc
	, bs.sd
	, bs.st
	, bs.et
	, bs.content
	, bs.vct
	, bs.rct
	, bs.regdate
	, bs.enddate
	, sc.cdname
	, group_concat(sc.csname) csname 
	FROM 
	board_study bs
	left outer join user u on bs.writer = u.EMAIL
	left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
	left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
	left outer join board_category bc on bs.bno = bc.bsbno
	, study_category sc
	WHERE bs.bno > 0
	and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
	and bs.writer = #{email}
	group by bs.bno
	</select>	
	
	<!-- 신청 스터디 불러오기 -->
	<select id="applyList" resultType="studyVO">
	SELECT
	ba.name
	, bs.bno
	, bs.title
	, bs.writer
	, u.NICKNAME
	, bs.now
	, bs.max
	, r.rDName
	, r.rSName
	, bs.RDID
	, bs.RSID
	, bs.age
	, bs.sc
	, bs.sd
	, bs.st
	, bs.et
	, bs.content
	, bs.vct
	, bs.rct
	, bs.regdate
	, bs.enddate
	, sc.cdname
	, sc.csname
	, sc.CDID
	, sc.CSID 
    , au.STATUS as apStatus
	FROM 
	board_study bs
	left outer join user u on bs.writer = u.EMAIL
	left outer join (select * from board_attach where status = "O") ba on bs.bno = ba.bsbno
	left outer join region r on bs.RDID = r.RDID and bs.RSID = r.RSID
	left outer join board_category bc on bs.bno = bc.bsbno
	right outer join apply_user au on bs.BNO = au.bsbno
	, study_category sc
	WHERE bs.bno > 0
	and sc.CDID = bc.CATEGORYD and sc.CSID = bc.CATEGORYS
	and au.usemail = #{email}
	group by bs.bno;
	</select>

  	<!-- sangwook -->
  	<!-- 이메일중복체크 -->
  	<select id = "chkEmail" resultType="int">
  		select count(*) from user where email = #{email};
  	</select>
  	
  	<select id = "chkNickname" resultType="int">
  		select count(*) from user where nickname = #{nickName};
  	</select>
  	
  	<update id = "emailConf" >
  		update user set emailconf = 1 where email = #{email};
  	</update>
  </mapper>